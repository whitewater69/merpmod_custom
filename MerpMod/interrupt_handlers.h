/***********************************************************************/
/*                                                                     */
/*  FILE        :interrupt_handlers.h                                  */
/*  DATE        :Tue, Oct 22, 2013                                     */
/*  DESCRIPTION :Interrupt Handler Declarations                        */
/*  CPU TYPE    :SH7058F                                               */
/*                                                                     */
/*  This file is generated by KPIT GNU Project Generator.              */
/*                                                                     */
/***********************************************************************/
               





#ifndef INTERRUPT_HANDLERS_H
#define INTERRUPT_HANDLERS_H

//;<<VECTOR DATA START (POWER ON RESET)>>
//;0 Power On Reset PC

//;<<VECTOR DATA END (POWER ON RESET)>>
// 1 Power On Reset SP

//;<<VECTOR DATA START (MANUAL RESET)>>
//;2 Manual Reset PC
void	INT_Manual_Reset_PC(void) __attribute__ ((interrupt_handler));

//;<<VECTOR DATA END (MANUAL RESET)>>
// 3 Manual Reset SP
void	INT_Manual_Reset_SP(void) __attribute__ ((interrupt_handler));

// 4 Illegal code

void INT_Illegal_code(void) __attribute__ ((interrupt_handler));

// 5 Reserved

// 6 Illegal slot

void INT_Illegal_slot(void) __attribute__ ((interrupt_handler));

// 7 Reserved

// 8 Reserved

// 9 CPU Address error

void INT_CPU_Address(void) __attribute__ ((interrupt_handler));

// 10 DMAC Address error

void INT_DMAC_Address(void) __attribute__ ((interrupt_handler));

// 11 NMI

void INT_NMI(void) __attribute__ ((interrupt_handler));

// 12 User breakpoint trap

void INT_User_Break(void) __attribute__ ((interrupt_handler));

// 13 FPU

void INT_FPU(void) __attribute__ ((interrupt_handler));

// 14 H-UDI

void INT_HUDI(void) __attribute__ ((interrupt_handler));

// 15 Reserved

// 16 Reserved

// 17 Reserved

// 18 Reserved

// 19 Reserved

// 20 Reserved

// 21 Reserved

// 22 Reserved

// 23 Reserved

// 24 Reserved

// 25 Reserved

// 26 Reserved

// 27 Reserved

// 28 Reserved

// 29 Reserved

// 30 Reserved

// 31 Reserved

// 32 TRAPA (User Vecter)

void INT_TRAPA32(void) __attribute__ ((interrupt_handler));

// 33 TRAPA (User Vecter)

void INT_TRAPA33(void) __attribute__ ((interrupt_handler));

// 34 TRAPA (User Vecter)

void INT_TRAPA34(void) __attribute__ ((interrupt_handler));

// 35 TRAPA (User Vecter)

void INT_TRAPA35(void) __attribute__ ((interrupt_handler));

// 36 TRAPA (User Vecter)

void INT_TRAPA36(void) __attribute__ ((interrupt_handler));

// 37 TRAPA (User Vecter)

void INT_TRAPA37(void) __attribute__ ((interrupt_handler));

// 38 TRAPA (User Vecter)

void INT_TRAPA38(void) __attribute__ ((interrupt_handler));

// 39 TRAPA (User Vecter)

void INT_TRAPA39(void) __attribute__ ((interrupt_handler));

// 40 TRAPA (User Vecter)

void INT_TRAPA40(void) __attribute__ ((interrupt_handler));

// 41 TRAPA (User Vecter)

void INT_TRAPA41(void) __attribute__ ((interrupt_handler));

// 42 TRAPA (User Vecter)

void INT_TRAPA42(void) __attribute__ ((interrupt_handler));

// 43 TRAPA (User Vecter)

void INT_TRAPA43(void) __attribute__ ((interrupt_handler));

// 44 TRAPA (User Vecter)

void INT_TRAPA44(void) __attribute__ ((interrupt_handler));

// 45 TRAPA (User Vecter)

void INT_TRAPA45(void) __attribute__ ((interrupt_handler));

// 46 TRAPA (User Vecter)

void INT_TRAPA46(void) __attribute__ ((interrupt_handler));

// 47 TRAPA (User Vecter)

void INT_TRAPA47(void) __attribute__ ((interrupt_handler));

// 48 TRAPA (User Vecter)

void INT_TRAPA48(void) __attribute__ ((interrupt_handler));

// 49 TRAPA (User Vecter)

void INT_TRAPA49(void) __attribute__ ((interrupt_handler));

// 50 TRAPA (User Vecter)

void INT_TRAPA50(void) __attribute__ ((interrupt_handler));

// 51 TRAPA (User Vecter)

void INT_TRAPA51(void) __attribute__ ((interrupt_handler));

// 52 TRAPA (User Vecter)

void INT_TRAPA52(void) __attribute__ ((interrupt_handler));

// 53 TRAPA (User Vecter)

void INT_TRAPA53(void) __attribute__ ((interrupt_handler));

// 54 TRAPA (User Vecter)

void INT_TRAPA54(void) __attribute__ ((interrupt_handler));

// 55 TRAPA (User Vecter)

void INT_TRAPA55(void) __attribute__ ((interrupt_handler));

// 56 TRAPA (User Vecter)

void INT_TRAPA56(void) __attribute__ ((interrupt_handler));

// 57 TRAPA (User Vecter)

void INT_TRAPA57(void) __attribute__ ((interrupt_handler));

// 58 TRAPA (User Vecter)

void INT_TRAPA58(void) __attribute__ ((interrupt_handler));

// 59 TRAPA (User Vecter)

void INT_TRAPA59(void) __attribute__ ((interrupt_handler));

// 60 TRAPA (User Vecter)

void INT_TRAPA60(void) __attribute__ ((interrupt_handler));

// 61 TRAPA (User Vecter)

void INT_TRAPA61(void) __attribute__ ((interrupt_handler));

// 62 TRAPA (User Vecter)

void INT_TRAPA62(void) __attribute__ ((interrupt_handler));

// 63 TRAPA (User Vecter)

void INT_TRAPA63(void) __attribute__ ((interrupt_handler));

// 64 Interrupt IRQ0

void INT_IRQ0(void) __attribute__ ((interrupt_handler));

// 65 Interrupt IRQ1

void INT_IRQ1(void) __attribute__ ((interrupt_handler));

// 66 Interrupt IRQ2

void INT_IRQ2(void) __attribute__ ((interrupt_handler));

// 67 Interrupt IRQ3

void INT_IRQ3(void) __attribute__ ((interrupt_handler));

// 68 Interrupt IRQ4

void INT_IRQ4(void) __attribute__ ((interrupt_handler));

// 69 Interrupt IRQ5

void INT_IRQ5(void) __attribute__ ((interrupt_handler));

// 70 Interrupt IRQ6

void INT_IRQ6(void) __attribute__ ((interrupt_handler));

// 71 Interrupt IRQ7

void INT_IRQ7(void) __attribute__ ((interrupt_handler));

// 72 DMAC0 DEI0

void INT_DMAC0_DEI0(void) __attribute__ ((interrupt_handler));

// 73 Reserved

// 74 DMAC1 DEI1

void INT_DMAC1_DEI1(void) __attribute__ ((interrupt_handler));

// 75 Reserved

// 76 DMAC2 DEI2

void INT_DMAC2_DEI2(void) __attribute__ ((interrupt_handler));

// 77 Reserved

// 78 DMAC3 DEI3

void INT_DMAC3_DEI3(void) __attribute__ ((interrupt_handler));

// 79 Reserved

// 80 ATU01 ITV1/ITV2A/ITV2B

void INT_ATU01_ITV(void) __attribute__ ((interrupt_handler));

// 81 Reserved

// 82 Reserved

// 83 Reserved

// 84 ATU02 ICI0A

void INT_ATU02_ICI0A(void) __attribute__ ((interrupt_handler));

// 85 Reserved

// 86 ATU02 ICI0B

void INT_ATU02_ICI0B(void) __attribute__ ((interrupt_handler));

// 87 Reserved

// 88 ATU03 ICI0C

void INT_ATU03_ICI0C(void) __attribute__ ((interrupt_handler));

// 89 Reserved

// 90 ATU03 ICI0D

void INT_ATU03_ICI0D(void) __attribute__ ((interrupt_handler));

// 91 Reserved

// 92 ATU04 OVI0

void INT_ATU04_OVI0(void) __attribute__ ((interrupt_handler));

// 93 Reserved

// 94 Reserved

// 95 Reserved

// 96 ATU11 IMI1A/CMI1

void INT_ATU11_IMI1A(void) __attribute__ ((interrupt_handler));

// 97 ATU11 IMI1B

void INT_ATU11_IMI1B(void) __attribute__ ((interrupt_handler));

// 98 ATU11 IMI1C

void INT_ATU11_IMI1C(void) __attribute__ ((interrupt_handler));

// 99 ATU11 IMI1D

void INT_ATU11_IMI1D(void) __attribute__ ((interrupt_handler));

// 100 ATU12 IMI1E

void INT_ATU12_IMI1E(void) __attribute__ ((interrupt_handler));

// 101 ATU12 IMI1F

void INT_ATU12_IMI1F(void) __attribute__ ((interrupt_handler));

// 102 ATU12 IMI1G

void INT_ATU12_IMI1G(void) __attribute__ ((interrupt_handler));

// 103 ATU12 IMI1H

void INT_ATU12_IMI1H(void) __attribute__ ((interrupt_handler));

// 104 ATU13 OVI1A/OVI1B

void INT_ATU13_OVI1(void) __attribute__ ((interrupt_handler));

// 105 Reserved

// 106 Reserved

// 107 Reserved

// 108 ATU21 IMI2A/CMI2A

void INT_ATU21_IMI2A(void) __attribute__ ((interrupt_handler));

// 109 ATU21 IMI2B/CMI2B

void INT_ATU21_IMI2B(void) __attribute__ ((interrupt_handler));

// 110 ATU21 IMI2C/CMI2C

void INT_ATU21_IMI2C(void) __attribute__ ((interrupt_handler));

// 111 ATU21 IMI2D/CMI2D

void INT_ATU21_IMI2D(void) __attribute__ ((interrupt_handler));

// 112 ATU22 IMI2E/CMI2E

void INT_ATU22_IMI2E(void) __attribute__ ((interrupt_handler));

// 113 ATU22 IMI2F/CMI2F

void INT_ATU22_IMI2F(void) __attribute__ ((interrupt_handler));

// 114 ATU22 IMI2G/CMI2G

void INT_ATU22_IMI2G(void) __attribute__ ((interrupt_handler));

// 115 ATU22 IMI2H/CMI2H

void INT_ATU22_IMI2H(void) __attribute__ ((interrupt_handler));

// 116 ATU23 OVI2A/OVI2B

void INT_ATU23_OVI2(void) __attribute__ ((interrupt_handler));

// 117 Reserved

// 118 Reserved

// 119 Reserved

// 120 ATU31 IMI3A

void INT_ATU31_IMI3A(void) __attribute__ ((interrupt_handler));

// 121 ATU31 IMI3B

void INT_ATU31_IMI3B(void) __attribute__ ((interrupt_handler));

// 122 ATU31 IMI3C

void INT_ATU31_IMI3C(void) __attribute__ ((interrupt_handler));

// 123 ATU31 IMI3D

void INT_ATU31_IMI3D(void) __attribute__ ((interrupt_handler));

// 124 ATU32 OVI3

void INT_ATU32_OVI3(void) __attribute__ ((interrupt_handler));

// 125 Reserved

// 126 Reserved

// 127 Reserved

// 128 ATU41 IMI4A

void INT_ATU41_IMI4A(void) __attribute__ ((interrupt_handler));

// 129 ATU41 IMI4B

void INT_ATU41_IMI4B(void) __attribute__ ((interrupt_handler));

// 130 ATU41 IMI4C

void INT_ATU41_IMI4C(void) __attribute__ ((interrupt_handler));

// 131 ATU41 IMI4D

void INT_ATU41_IMI4D(void) __attribute__ ((interrupt_handler));

// 132 ATU42 OVI4

void INT_ATU42_OVI4(void) __attribute__ ((interrupt_handler));

// 133 Reserved

// 134 Reserved

// 135 Reserved

// 136 ATU51 IMI5A

void INT_ATU51_IMI5A(void) __attribute__ ((interrupt_handler));

// 137 ATU51 IMI5B

void INT_ATU51_IMI5B(void) __attribute__ ((interrupt_handler));

// 138 ATU51 IMI5C

void INT_ATU51_IMI5C(void) __attribute__ ((interrupt_handler));

// 139 ATU51 IMI5D

void INT_ATU51_IMI5D(void) __attribute__ ((interrupt_handler));

// 140 ATU52 OVI5

void INT_ATU52_OVI5(void) __attribute__ ((interrupt_handler));

// 141 Reserved

// 142 Reserved

// 143 Reserved

// 144 ATU6 CMI6A

void INT_ATU6_CMI6A(void) __attribute__ ((interrupt_handler));

// 145 ATU6 CMI6B

void INT_ATU6_CMI6B(void) __attribute__ ((interrupt_handler));

// 146 ATU6 CMI6C

void INT_ATU6_CMI6C(void) __attribute__ ((interrupt_handler));

// 147 ATU6 CMI6D

void INT_ATU6_CMI6D(void) __attribute__ ((interrupt_handler));

// 148 ATU7 CMI7A

void INT_ATU7_CMI7A(void) __attribute__ ((interrupt_handler));

// 149 ATU7 CMI7B

void INT_ATU7_CMI7B(void) __attribute__ ((interrupt_handler));

// 150 ATU7 CMI7C

void INT_ATU7_CMI7C(void) __attribute__ ((interrupt_handler));

// 151 ATU7 CMI7D

void INT_ATU7_CMI7D(void) __attribute__ ((interrupt_handler));

// 152 ATU81 OSI8A

void INT_ATU81_OSI8A(void) __attribute__ ((interrupt_handler));

// 153 ATU81 OSI8B

void INT_ATU81_OSI8B(void) __attribute__ ((interrupt_handler));

// 154 ATU81 OSI8C

void INT_ATU81_OSI8C(void) __attribute__ ((interrupt_handler));

// 155 ATU81 OSI8D

void INT_ATU81_OSI8D(void) __attribute__ ((interrupt_handler));

// 156 ATU82 OSI8E

void INT_ATU82_OSI8E(void) __attribute__ ((interrupt_handler));

// 157 ATU82 OSI8F

void INT_ATU82_OSI8F(void) __attribute__ ((interrupt_handler));

// 158 ATU82 OSI8G

void INT_ATU82_OSI8G(void) __attribute__ ((interrupt_handler));

// 159 ATU82 OSI8H

void INT_ATU82_OSI8H(void) __attribute__ ((interrupt_handler));

// 160 ATU83 OSI8I

void INT_ATU83_OSI8I(void) __attribute__ ((interrupt_handler));

// 161 ATU83 OSI8J

void INT_ATU83_OSI8J(void) __attribute__ ((interrupt_handler));

// 162 ATU83 OSI8K

void INT_ATU83_OSI8K(void) __attribute__ ((interrupt_handler));

// 163 ATU83 OSI8L

void INT_ATU83_OSI8L(void) __attribute__ ((interrupt_handler));

// 164 ATU84 OSI8M

void INT_ATU84_OSI8M(void) __attribute__ ((interrupt_handler));

// 165 ATU84 OSI8N

void INT_ATU84_OSI8N(void) __attribute__ ((interrupt_handler));

// 166 ATU84 OSI8O

void INT_ATU84_OSI8O(void) __attribute__ ((interrupt_handler));

// 167 ATU84 OSI8P

void INT_ATU84_OSI8P(void) __attribute__ ((interrupt_handler));

// 168 ATU91 CMI9A

void INT_ATU91_CMI9A(void) __attribute__ ((interrupt_handler));

// 169 ATU91 CMI9B

void INT_ATU91_CMI9B(void) __attribute__ ((interrupt_handler));

// 170 ATU91 CMI9C

void INT_ATU91_CMI9C(void) __attribute__ ((interrupt_handler));

// 171 ATU91 CMI9D

void INT_ATU91_CMI9D(void) __attribute__ ((interrupt_handler));

// 172 ATU92 CMI9E

void INT_ATU92_CMI9E(void) __attribute__ ((interrupt_handler));

// 173 Reserved

// 174 ATU92 CMI9F

void INT_ATU92_CMI9F(void) __attribute__ ((interrupt_handler));

// 175 Reserved

// 176 ATU101 CMI10A

void INT_ATU101_CMI10A(void) __attribute__ ((interrupt_handler));

// 177 Reserved

// 178 ATU101 CMI10B

void INT_ATU101_CMI10B(void) __attribute__ ((interrupt_handler));

// 179 Reserved

// 180 ATU102 ICI10A/CMI10G

void INT_ATU102_ICI10A(void) __attribute__ ((interrupt_handler));

// 181 Reserved

// 182 Reserved

// 183 Reserved

// 184 ATU11 IMI11A

void INT_ATU11_IMI11A(void) __attribute__ ((interrupt_handler));

// 185 Reserved

// 186 ATU11 IMI11B

void INT_ATU11_IMI11B(void) __attribute__ ((interrupt_handler));

// 187 ATU11 OVI11

void INT_ATU11_OVI11(void) __attribute__ ((interrupt_handler));

// 188 CMT0 CMTI0

void INT_CMT0_CMTI0(void) __attribute__ ((interrupt_handler));

// 189 Reserved

// 190 A/D0 ADI0

void INT_AD0_ADI0(void) __attribute__ ((interrupt_handler));

// 191 Reserved

// 192 CMT1 CMTI1

void INT_CMT1_CMTI1(void) __attribute__ ((interrupt_handler));

// 193 Reserved

// 194 A/D1 ADI1

void INT_AD1_ADI1(void) __attribute__ ((interrupt_handler));

// 195 Reserved

// 196 A/D2 ADI2

void INT_AD2_ADI2(void) __attribute__ ((interrupt_handler));

// 197 Reserved

// 198 Reserved

// 199 Reserved

// 200 SCI0 ERI0

void INT_SCI0_ERI0(void) __attribute__ ((interrupt_handler));

// 201 SCI0 RXI0

void INT_SCI0_RXI0(void) __attribute__ ((interrupt_handler));

// 202 SCI0 TXI0

void INT_SCI0_TXI0(void) __attribute__ ((interrupt_handler));

// 203 SCI0 TEI0

void INT_SCI0_TEI0(void) __attribute__ ((interrupt_handler));

// 204 SCI1 ERI1

void INT_SCI1_ERI1(void) __attribute__ ((interrupt_handler));

// 205 SCI1 RXI1

void INT_SCI1_RXI1(void) __attribute__ ((interrupt_handler));

// 206 SCI1 TXI1

void INT_SCI1_TXI1(void) __attribute__ ((interrupt_handler));

// 207 SCI1 TEI1

void INT_SCI1_TEI1(void) __attribute__ ((interrupt_handler));

// 208 SCI2 ERI2

void INT_SCI2_ERI2(void) __attribute__ ((interrupt_handler));

// 209 SCI2 RXI2

void INT_SCI2_RXI2(void) __attribute__ ((interrupt_handler));

// 210 SCI2 TXI2

void INT_SCI2_TXI2(void) __attribute__ ((interrupt_handler));

// 211 SCI2 TEI2

void INT_SCI2_TEI2(void) __attribute__ ((interrupt_handler));

// 212 SCI3 ERI3

void INT_SCI3_ERI3(void) __attribute__ ((interrupt_handler));

// 213 SCI3 RXI3

void INT_SCI3_RXI3(void) __attribute__ ((interrupt_handler));

// 214 SCI3 TXI3

void INT_SCI3_TXI3(void) __attribute__ ((interrupt_handler));

// 215 SCI3 TEI3

void INT_SCI3_TEI3(void) __attribute__ ((interrupt_handler));

// 216 SCI4 ERI4

void INT_SCI4_ERI4(void) __attribute__ ((interrupt_handler));

// 217 SCI4 RXI4

void INT_SCI4_RXI4(void) __attribute__ ((interrupt_handler));

// 218 SCI4 TXI4

void INT_SCI4_TXI4(void) __attribute__ ((interrupt_handler));

// 219 SCI4 TEI4

void INT_SCI4_TEI4(void) __attribute__ ((interrupt_handler));

// 220 HCAN0 ERS0

void INT_HCAN0_ERS0(void) __attribute__ ((interrupt_handler));

// 221 HCAN0 OVR0

void INT_HCAN0_OVR0(void) __attribute__ ((interrupt_handler));

// 222 HCAN0 RM0

void INT_HCAN0_RM0(void) __attribute__ ((interrupt_handler));

// 223 HCAN0 SLE0

void INT_HCAN0_SLE0(void) __attribute__ ((interrupt_handler));

// 224 WDT ITI

void INT_WDT_ITI(void) __attribute__ ((interrupt_handler));

// 225 Reserved

// 226 Reserved

// 227 Reserved

// 228 HCAN1 ERS1

void INT_HCAN1_ERS1(void) __attribute__ ((interrupt_handler));

// 229 HCAN1 OVR1

void INT_HCAN1_OVR1(void) __attribute__ ((interrupt_handler));

// 230 HCAN1 RM1

void INT_HCAN1_RM1(void) __attribute__ ((interrupt_handler));

// 231 HCAN1 SLE1

void INT_HCAN1_SLE1(void) __attribute__ ((interrupt_handler));

// 232 Reserved

// 233 Reserved

// 234 Reserved

// 235 Reserved

// 236 Reserved

// 237 Reserved

// 238 Reserved

// 239 Reserved

// 240 Reserved

// 241 Reserved

// 242 Reserved

// 243 Reserved

// 244 Reserved

// 245 Reserved

// 246 Reserved

// 247 Reserved

// 248 Reserved

// 249 Reserved

// 250 Reserved

// 251 Reserved

// 252 Reserved

// 253 Reserved

// 254 Reserved

// 255 Reserved

// Dummy

void Dummy(void) __attribute__ ((interrupt_handler));

#endif

